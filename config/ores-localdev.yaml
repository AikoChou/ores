# Top level configuration
ores:
  score_processor: local_celery
  wsgi:
    application_root: ""
    url_prefix: ""

# Caching options
score_caches:
  local_redis:
    class: ores.score_caches.Redis
    host: localhost
    prefix: ores
    socket_timeout: 15 # seconds
  memory_lru:
    class: ores.score_caches.LRU

# Metrics collection options
metrics_collectors:
  local_logging:
    class: ores.metrics_collectors.Logger

# Score processing options
score_processors:
  defaults:
    score_cache: memory_lru
    metrics_collector: local_logging
    scoring_contexts:
      - enwiki
  local_timeout:
    class: ores.score_processors.Timeout
    timeout: 15 # seconds
  local_celery:
    class: ores.score_processors.Celery
    BROKER_URL: redis://localhost
    BROKER_TRANSPORT_OPTIONS: {'socket_timeout': 15} # seconds
    CELERY_RESULT_BACKEND: redis://localhost
    CELERY_ACCEPT_CONTENT: ['pickle']
    CELERY_TASK_SERIALIZER: 'pickle'
    CELERY_RESULT_SERIALIZER: 'pickle'
    CELERYD_CONCURRENCY: 16
    timeout: 15 # seconds
    queue_maxsize: 100 # pending tasks
  timeout:
    class: ores.score_processors.Timeout
    timeout: 5 # seconds

# Scoring contexts
scoring_contexts:
  enwiki:
    extractor: enwiki_api
    scorer_models:
      reverted: enwiki_revert

# Available feature extractors
extractors:
  defaults:
    class: revscoring.extractors.APIExtractor
    user_agent: Object Revision Evaluation Service (local development)
  enwiki_api:
    host: https://en.wikipedia.org/
    timeout: 2 # seconds

# Scorer models
scorer_models:
  defaults:
    class: revscoring.scorer_models.MLScorerModel
  enwiki_revert:
    model_file: models/enwiki.reverted.linear_svc.model
