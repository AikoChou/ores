swagger: '2.0'
info:
  title: ORES scoring interface
  description: |
    A RESTful API for scoring revisions (v2 paths).  These paths provide
    access to a set of scoring models.  This API primarily differs from v1 in
    that there is only one response document schema that any path returns.
    This response document contains 'error' information, 'warnings' and
    'scores' structures.

    There's also new functionality for returning 'feature' values used in
    scoring and 'inject'ing custom feature values for scoring.
  version: "2"
host: ores.wmflabs.org
schemes:
  - https
basePath: /
produces:
  - application/json
paths:
  /v2/scores/:
    get:
      tags: ['scoring']
      summary: List available scoring contexts and models.
      description: |
        This route provides a list of available contexts for scoring.
        Generally a wiki is 1:1 with a context and a context is expressed as
        the database name of the wiki.  For example "enwiki" is English
        Wikipedia and "wikidatawiki" is Wikidata.
      parameters:
        - name: model_info
          in: query
          description: |
            Model information fields to include in the response.  If no value is
            provided, all info fields will be returned.  Otherise, fields will
            be limited to those provided (e.g. "type|test_stats").
          required: false
          type: string
          format: \"|\" delimited field names
      responses:
        "200":
          description: A JSON document information about the available contexts and models
          schema:
            $ref: '#/definitions/ResponseDocument'
        default:
          description: An error occurred that prevented contexts from being retrieved
          schema:
            $ref: '#/definitions/ResponseDocument'
  /v2/scores/{context}:
    get:
      tags: ['scoring']
      summary: Score {revids} using multiple {models} in the same request.
      description: |
        This route provides access to all {models} within a {context}.  This
        path is useful for either exploring information about {models} available
        within a {context} or scoring one or more {revids} using one or more
        {models} at the same time.
      parameters:
        - name: context
          in: path
          description: |
            The name of the {context} to find {model}.  This is usually the
            dbname of a wiki project.
          required: true
          type: string
          format: string
        - name: models
          in: query
          description: The name of a model to use when scoring
          required: false
          type: string
          format: \"|\" delimited model names
        - name: revids
          in: query
          description: The revision IDs to score (split multiple ids with "|")
          required: false
          type: number
          format: integer
        - name: model_info
          in: query
          description: |
            Model information fields to include in the response.  If no value is
            provided, all info fields will be returned.  Otherise, fields will
            be limited to those provided (e.g. "type|test_stats").
          required: false
          type: string
          format: \"|\" delimited field names
      responses:
        "200":
          description: A JSON document containing scores or information about the available models
          schema:
            $ref: '#/definitions/ResponseDocument'
        "503":
          description: Server overloaded -- Slow down and/or please try again later
          schema:
            $ref: '#/definitions/ResponseDocument'
        default:
          description: An error occurred that prevented any scores from being generated
          schema:
            $ref: '#/definitions/ResponseDocument'
  /v2/scores/{context}/{model}:
    get:
      tags: ['scoring']
      summary: Score many {revids} using {model} in the same request.
      description: |
        Provides a means of scoring many {revids} using {model} in the same
        request.
      parameters:
        - name: context
          in: path
          description: |
            The name of the {context} to find {model}.  This is usually the
            dbname of a wiki project.
          required: true
          type: string
          format: string
        - name: model
          in: path
          description: The name of a model to use when scoring
          required: true
          type: string
          format: string
        - name: revids
          in: query
          description: The revision IDs to score
          required: false
          type: number
          format: \"|\" delimited integers
        - name: model_info
          in: query
          description: |
            Model information fields to include in the response.  If no value is
            provided, all info fields will be returned.  Otherise, fields will
            be limited to those provided (e.g. "type|test_stats").
          required: false
          type: string
          format: \"|\" delimited field names
      responses:
        "200":
          description: A JSON document containing scores
          schema:
            $ref: '#/definitions/ResponseDocument'
        "503":
          description: Server overloaded -- Slow down and/or please try again later
          schema:
            $ref: '#/definitions/ResponseDocument'
        default:
          description: An error occurred that prevented any scores from being generated
          schema:
            $ref: '#/definitions/ResponseDocument'
  /v2/scores/{context}/{model}/{revid}:
    get:
      tags: ['scoring']
      summary: Score a single {revid} using {model}.
      description: |
        Provides a means of scoring {revid} using {model} in {context}.
      parameters:
        - name: context
          in: path
          description: |
            The name of the {context} to find {model}.  This is usually the
            dbname of a wiki project.
          required: true
          type: string
          format: string
        - name: model
          in: path
          description: The name of a model to use when scoring
          required: true
          type: string
          format: string
        - name: revid
          in: path
          description: The revision ID to score
          required: true
          type: number
          format: integer
        - name: model_info
          in: query
          description: |
            Model information fields to include in the response.  If no value is
            provided, all info fields will be returned.  Otherise, fields will
            be limited to those provided (e.g. "type|test_stats").
          required: false
          type: string
          format: \"|\" delimited field names
        - name: features
          in: query
          description: |
            If present, feature values used in scoring will be presented in the
            response
          required: false
          type: boolean
          format: n/a
        - name: inject
          in: query
          description: |
            A JSON formatted set of of pre-computed datasources/features to use
            when scoring.  Keys correspond to the name of dependencies used
            when scoring (e.g. features and datasources).
          required: false
          type: JSON
          format: key-value pairs
      responses:
        "200":
          description: A JSON document containing scores
          schema:
            $ref: '#/definitions/ResponseDocument'
        "503":
          description: Server overloaded -- Slow down and/or please try again later
          schema:
            $ref: '#/definitions/ResponseDocument'
        default:
          description: An error occurred that prevented any scores from being generated
          schema:
            $ref: '#/definitions/ResponseDocument'

definitions:
  ResponseDocument:
    type: object
    properties:
      scores:
        description: A mapping between contect names and ContextDocuments
        type: object
        additionalProperties:
          $ref: '#/definitions/ContextDocument'
      error:
        description: An error that prevented processing the request
        type: object
        properties:
          code:
            description: A short string identifying the error
            type: string
          message:
            description: A human-readable explanation of what went wrong
            type: string
      warnings:
        description: A list of warnings raised while generating a response
        type: array
        items:
          $ref: '#/definitions/ErrorWarningDocument'
  ContextDocument:
    type: object
    description: A mapping between model names on ModelDocuments
    additionalProperties:
      $ref: '#/definitions/ModelDocument'
  ModelDocument:
    type: object
    properties:
      version:
        description: A semantic version number for the model
        type: string
      scores:
        description: A mapping between revid and ScoreDocuments
        type: object
        additionalProperties:
          $ref: '#/definitions/ScoreDocument'
      features:
        description: A mapping of feature names to the values generated in scoring
        type: object
        additionalProperties:
          type: [number, boolean]
      info:
        description: Extended information about the model
        type: object
        required:
          - type
          - version
        properties:
          type:
            type: string
            description: The type of model used to score
          version:
            type: string
            description: A semantic version string
          trained:
            type: number
            description: The datetime at which the model was trained (in seconds since Jan. 1st 1970)
          params:
            type: object
            description: A list of parameters used when constructing the model
            additionalProperties: true
          test_stats:
            type: object
            description: A list of test statistics used on the model.
            additionalProperties: true
  ScoreDocument:
    type: object
    description: A score generated by a model for a specific revision (or the error that occurred while generating a score)
    properties:
      error:
        description: If scoring this revision failed, this field contains information about the error
        type: object
        properties:
          code:
            description: A short string identifying the error
            type: string
          message:
            description: A human-readable explanation of what went wrong
            type: string
      additionalProperties:
        type: [number, string, boolean, array, object]
  ErrorWarningDocument:
    type: object
    properties:
      code:
        description: A short string identifying the error
        type: string
      message:
        description: A human-readable explanation of what went wrong
        type: string
